.search-form
  = form_tag search_rooms_path, method: :get do
    .input-wrapper
      .search-form-location
        = hidden_field_tag :lat
        = hidden_field_tag :lng
        %label.search-form-label{for: 'search-location'}
          %span 場所
        %input#search-location{name: 'location',placeholder: '行き先、都市、住所', class: 'form-control'}
      .search-form-dates
        .container-fluid
          %label.search-form-label{for: 'start-date'}
            %span 日時
          .row
            .col-sm-5.input-date
              .date-range-picker
                %input{type: 'text', name: 'startDate', id: 'start-date', placeholder: 'チェックイン', class: 'input-date form-control'}
            .col-sm-1.text-center
              %p#date-arrow →
            .col-sm-5.input-date
              %input{type: 'text', name: 'endDate', id: 'end-date', placeholder: 'チェックアウト', class: 'input-date form-control'}
              .date-input.date-end
                -# %button
      .search-form-guests
        %label.search-form-label{for: 'how-many-guests'}
          %span ゲスト
        .guest-picker-trigger
          %select.form-control
            %option{:value => "1"} 宿泊1人
            %option{:value => "2"} 宿泊2人
            %option{:value => "3"} 宿泊3人
            %option{:value => "4"} 宿泊4人
            %option{:value => "5"} 宿泊5人
            %option{:value => "6人以上"} 宿泊6人以上
      .search-form-submit
        = submit_tag "探す", class: "btn btn-danger"

:javascript
  function init() {
  
    var input = /** @type {!HTMLInputElement} */(
        document.getElementById('search-location'));
  
  
    var autocomplete = new google.maps.places.Autocomplete(input);
  
    autocomplete.addListener('place_changed', function() {
      var place = autocomplete.getPlace();
      var lat = place.geometry.location.lat();
      var lng = place.geometry.location.lng();

      document.getElementById('lat').value = lat ;
      document.getElementById('lng').value = lng ;

      if (!place.geometry) {
        window.alert("Autocomplete's returned place contains no geometry");
        return;
      }
  
      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }
  
    });
  
  }

%script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyAXbvOKObMqITgrrvsCSne77MDEA3T9f8o&libraries=places&callback=init"}
